@using MachineParkManagement.Models
@using Microsoft.EntityFrameworkCore
@implements IAsyncDisposable
@inject IDbContextFactory<MachineParkManagementContext> DbFactory

<!-- Navbar -->
<header class="bg-gray-800 text-white shadow-md">
    <div class="container mx-auto flex items-center justify-between px-6 py-4">
        <!-- Brand -->
        <a href="/" class="text-xl font-bold hover:text-gray-300">Management Central</a>

        <!-- Navigation Menu -->
        <nav class="flex space-x-4">
            <NavLink class="text-sm font-medium hover:text-gray-300" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill" aria-hidden="true"></span> Home
            </NavLink>

            <NavLink class="text-sm font-medium hover:text-gray-300" href="machines">
                <span class="bi bi-list-task" aria-hidden="true"></span> Machines
            </NavLink>
        </nav>
    </div>
</header>

@code {
    private MachineParkManagementContext context = default!;
    private IQueryable<Machine> Machines = default!;

    protected override async Task OnInitializedAsync()
    {
        context = DbFactory.CreateDbContext();

        // Fetch machine data as IQueryable
        Machines = context.Machine;

        // Return a completed task since there are no asynchronous operations
        await Task.CompletedTask;
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
